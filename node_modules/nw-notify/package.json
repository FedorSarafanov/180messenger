{
  "name": "nw-notify",
  "version": "0.2.3",
  "description": "Nice notifications for node webkit",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": {
    "name": "Christoph Groß",
    "email": "gross@blubyte.de",
    "url": "http://chris-labs.de/"
  },
  "license": "MIT",
  "dependencies": {
    "async": "^0.9.0",
    "lodash": "^2.4.1",
    "promise": "^6.0.1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/cgrossde/nw-notify"
  },
  "readme": "# nw-notify\n*Nice and simple notifications for node-webkit apps*\n\n![Mac demo](https://github.com/cgrossde/nw-notify/raw/gh-pages/nw-notify-mac-small.png)\n![Win demo](https://raw.githubusercontent.com/cgrossde/nw-notify/gh-pages/nw-notify-windows-small.png)\n\n*nw-notify* displays notifications in the lower right corner. Notifications are stacked (most recent on the top) and slide down, once they expire. *nw-notify* is a child of [Pullover](https://github.com/cgrossde/Pullover), a destop client for the Pushover service. I was not satisfied with node-webkits native notifications on windows (just a bubble dialog) and other notification modules like [node-notifier](https://github.com/mikaelbr/node-notifier), [node-webkit-desktop-notifications](https://github.com/edjafarov/node-webkit-desktop-notification) or [nw-desktop-notifications](https://github.com/robrighter/nw-desktop-notifications) did not work with node-webkit (node-notifier), had nasty bugs or just didn't look very nice. I made some design choices for *nw-notify* to prevent bugs the other implementations ran into:\n\n* No slide in of notifications from the right side (prevent bugs with multiple screens)\n* Short animation with as few steps as possible to keep it running smoothly\n* Multi-Screen: Notifications are only shown on the first screen ~~(this may change if someone makes a good pull-request)~~ makkesk8 made a good PR and notifications are now shown on the primary screen (as of v0.2.2).\n\n\n## Features\n\n* Windows and Mac supported (Linux not tested, but should work)\n* AppIcons (optional, left of notification text) and images (optional, right of notification text)\n* Close button (top right corner)\n* Open URLs (optional)\n* Callbacks for `show`, `click`, `close` (by user), `timeout` (close after displayTime) and `closeByAPI`\n\n## Usage\n\n```JavaScript\nvar nwNotify = require('nw-notify');\n// Change config options\nnwNotify.setConfig({\n    appIcon: nwNotify.getAppPath() + 'images/icon.png',\n    displayTime: 6000\n});\n\n// Send simple notification\nnwNotify.notify('Some title', 'Some text');\n// Notification with URL, click notification to open\nnwNotify.notify('Open URL', 'Click to goto Wikipedia', 'http://wikipedia.org');\n// Or some images within your app\nnwNotify.notify('Open URL', 'Click to goto Wikipedia', 'http://wikipedia.org', nwNotify.getAppPath() + 'pathTo/image/from/nwAppRoot/folder.png');\n// Do something when user clicks on notification\nnwNotify.notify('Custom func','Action on click', null, null, function() {\n    // Your code here\n    console.log('User clicked notification')\n});\n\n// Change config options again\nnwNotify.setConfig({\n    appIcon: nwNotify.getAppPath() + 'images/otherIcon.png',\n    defaultStyleText: {\n        color: '#FF000',\n        fontWeight: 'bold'\n    }\n});\n// Send notification that uses the new options\nnwNotify.notify('Notification', 'Using some other app icon');\n\n// Supply object instead of parameters to notify function\nvar id = nwNotify.notify({\n    title: 'Notification title',\n    text: 'Some text',\n    onClickFunc: function(event) { console.log('onCLick', event) },\n    onShowFunc: function(event) { console.log('onShow', event) },\n    onCloseFunc: function(event) { console.log('onClose', event) }\n});\n\n// Before terminating you should close all windows openend by nw-notify\nnwNotify.closeAll();\n```\n\n## Max notifications and queueing\n\nOn startup *nw-notify* will determine the maximum amount of notifications that fit on the screen. This value will be stored in `config.maxVisibleNotifications` but cannot be greater than 7. This is to ensure that all animations go smoothly and *nw-notify* does not freeze your computer. However you can overwrite this value with `setConfig()`. If you do that you should use `calcMaxVisibleNotification()` to check if that many notifications fit onto the users screen.\n**Queueing:** Once the limit of `config.maxVisibleNotifications` is reached, *nw-notify* will queue all new notifications internally. The order of `notifiy()`-calls will be preserved and once old notifications fade out, the queued notifications are shown.\n\n## Callbacks\n\nCalling `notify()` will return an unique id for this particular notification. Each callback (`onClickFunc`, `onShowFunc`, `onCloseFunc`) will return an event object which contains the notification id, the event name(click, show, close, timout, closeByAPI) and a function to close the notification:\n\n```JavaScript\n{\n    event: 'click',\n    id: 32,\n    closeNotification: function() {}\n}\n```\n\n**Example**\n```JavaScript\nfunction handleClick(event) {\n    console.log('User clicked notification ' + event.id + '. Closing it immediately.');\n    event.closeNotification();\n}\n\nfunction handleClose(event) {\n    console.log('Notification was closed because: ' + event.name);\n}\n\nnwNotify.notify({\n    title: 'Notification title',\n    text: 'Some text',\n    onClickFunc: handleClick,\n    onCloseFunc: handleClose\n});\n```\n\n\n## Function reference\n\n### notify(title, text, url, image, onClickFunction, onShowFunction, onCloseFunction)\nDisplay new notification\n\nOr supply an object to `notify()` like this:\n\n~~~\nnotify({\n    title: 'Title',\n    text: 'Some text',\n    image: 'path/to/image.png',\n    url: 'http://google.de',\n    onClickFunc: function() { alert('onCLick') },\n    onShowFunc: function() { alert('onShow') },\n    onCloseFunc: function() { alert('onClose')}\n});\n~~~\n\n\n### setConfig(configObj)\nChange some config options. Can be run multiple times, also between `notify()`-calls to chnage *nw-notify*s behaviour.\n\n### getAppPath() : string\nReturns path to root of your node webkit app. Use it to provide paths to app icon or image files that are shipped with your app.\n\n### closeAll()\nClears the animation queue and closes all windows opened by *nw-notify*. Call this to clean up before quiting your app.\n\n### setTemplatePath(path)\nIf you want to use your own `notification.html` you use this method. Use it like this: `nwNotify.setTemplatePath(nwNotify.getAppPath() + 'path/to/notification.html');`\n\n### calcMaxVisibleNotification() : int\nReturns the maximum amount of notifications that fit onto the users screen.\n\n\n\n## License\n\n    The MIT License (MIT)\n    \n    Copyright (c) 2014 Christoph Groß <gross@blubyte.de> (http://chris-labs.de)\n    \n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n    \n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n    \n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/cgrossde/nw-notify/issues"
  },
  "_id": "nw-notify@0.2.3",
  "dist": {
    "shasum": "4ed0440cdf858ea955322825a9c705352ca5956a"
  },
  "_from": "nw-notify@",
  "_resolved": "https://registry.npmjs.org/nw-notify/-/nw-notify-0.2.3.tgz"
}
